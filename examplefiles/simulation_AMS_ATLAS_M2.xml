<?xml version="1.0" encoding="UTF-8"?>
<Simulation>
<!--
    ROME (ReadOut Modelling Environment)
    Copyright © 2017  Rudolf Schimassek (rudolf.schimassek@kit.edu),
                      Felix Ehrler (felix.ehrler@kit.edu),
                      Karlsruhe Institute of Technology (KIT)
                                - ASIC and Detector Laboratory (ADL)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 3 as 
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    This file is an example file for the ROME simulation framework usage.
-->
	<SimulationEnd t="-1" stopdelay="20"/>
	<Standardpixel x="60" y="50" z ="30"/>
	<Detector addrname="Detector" outputfile="readhits_M2.dat" losthitfile="losthits_M2.dat">
		<ROC queuelength ="1" addrname="CU" ReadoutDelay="-1"><!-- delay=-1 to read out at the same clock cycle as the hit was written inside -->
			<NTimes n="28" x="120" y="0" z="0">
				<ROC queuelength="1" addrname="EoC">
					<NTimes n="2" x="60" y="0" z="0">
						<NTimes n="20" x="0" y="800" z="0">
							<ROC queuelength="4" addrname="Group2" buffertype="PrioBuffer" readoutmechanism="OneByOne">
								<ROC queuelength="4" addrname="Group1" addr="0" buffertype="PrioBuffer" ReadoutDelay="20" Triggered="1">
									<Pixel addrname="PixelDiode" addr="17">
										<Position x="0" y="0" z="0"/>
										<Threshold thr="1"/>
										<Efficiency n="1.0"/> <!-- not necessary; only for != 1 -->
									</Pixel>
									<Pixel addrname="PixelDiode" addr="18">
										<Position x="0" y="50" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="20">
										<Position x="0" y="100" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="24">
										<Position x="0" y="150" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="33">
										<Position x="0" y="200" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="34">
										<Position x="0" y="250" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="36">
										<Position x="0" y="300" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="40">
										<Position x="0" y="350" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="65">
										<Position x="0" y="400" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="66">
										<Position x="0" y="450" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="68">
										<Position x="0" y="500" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="72">
										<Position x="0" y="550" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="129">
										<Position x="0" y="600" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="130">
										<Position x="0" y="650" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="132">
										<Position x="0" y="700" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
									<Pixel addrname="PixelDiode" addr="136">
										<Position x="0" y="750" z="0"/>
										<Threshold thr="1"/>
									</Pixel>
								</ROC>
							</ROC>
						</NTimes>
					</NTimes>
				</ROC>
			</NTimes>			
		</ROC>
		<StateMachine>
			<State name="synchronisation">
				<Action what="loadpixel"/>

				<!-- An overview of the hits inside the detector: -->
				<Action what="cout" parameter="readhits (pixelcell): " value="0"/>
				<Action what="printcounter" parameter="loadpixel" value="1"/>
				<Action what="cout" parameter="hits left: " value="0"/>
				<Action what="printhitsavailable" parameter="" value="1"/>
				<Action what="cout" parameter="  Group1: " value="0"/>
				<Action what="printhitsavailable" parameter="Group1" value="1"/>
				<Action what="cout" parameter="  Group2: " value="0"/>
				<Action what="printhitsavailable" parameter="Group2" value="1"/>
				<Action what="cout" parameter="  EoC:    " value="0"/>
				<Action what="printhitsavailable" parameter="EoC" value="1"/>
				<Action what="cout" parameter="  CU:     " value="0"/>
				<Action what="printhitsavailable" parameter="CU" value="1"/>

				<!-- this is a special state executed on every "falling edge" of the clock.
				     It is not supposed to be part of the actual state machine, however it can
				     be a part of it. In the first case, it does not need any state transition,
				     in the second case however the state transitions are necessary.
				 -->
			</State>
			<State name="PullDown">
				<StateTransition nextstate="LoadColumn" delay="1">
					<Condition relation="Equal">
						<Lvalue value="1"/>
						<Rvalue value="1"/>
					</Condition>
				</StateTransition>
			</State>
			<State name="LoadColumn">
				<Action what="loadcell" parameter="EoC"/>
				<!--<Action what="printhitsavailable" parameter="EoC" value="1"/>-->
				<StateTransition nextstate="LoadColumn" delay="0">
					<Condition relation="Smaller">
						<Lvalue>
							<Action what="getcountervalue" parameter="LdColrounds"/>
						</Lvalue>
						<Rvalue value="4"/>
					</Condition>
					<Action what="incrementcounter" parameter="LdColrounds" value="1"/>
				</StateTransition>
				<StateTransition nextstate="LoadPixel" delay="1">
					<Action what="setcounter" parameter="LdColrounds" value="0"/>
					<Condition relation="LargerEqual">
						<Lvalue>
							<Action what="getcountervalue" parameter="LdColrounds"/>
						</Lvalue>
						<Rvalue value="4"/>
					</Condition>
				</StateTransition>
			</State>
			<State name="LoadPixel">
				<Action what="loadcell" parameter="Group2"/>
				<!--<Action what="printhitsavailable" parameter="Group2" value="1"/>-->
				<StateTransition nextstate="LoadPixel" delay="0">
					<Action what="incrementcounter" parameter="LdPixrounds" value="1"/>
					<Condition relation="And">
						<Lvalue>
							<Condition relation="Smaller">
								<Lvalue>
									<Action what="getcountervalue" parameter="LdPixrounds"/>
								</Lvalue>
								<Rvalue value="2"/> <!-- maximum: 63 -->
							</Condition>
						</Lvalue>
						<Rvalue>
							<Condition relation="Equal">
								<Lvalue>
									<Action what="hitsavailable" parameter="EoC"/>
								</Lvalue>
								<Rvalue value="0"/>
							</Condition>
						</Rvalue>
					</Condition>
				</StateTransition>
				<StateTransition nextstate="PullDown" delay="1">
					<Action what="setcounter" parameter="LdPixrounds" value="0"/>
					<Condition relation="Equal">
						<Lvalue>
							<Action what="hitsavailable" parameter="EoC"/>
						</Lvalue>
						<Rvalue value="0"/>
					</Condition>
				</StateTransition>
				<StateTransition nextstate="ReadColumn" delay="1">
					<Action what="setcounter" parameter="LdPixrounds" value="0"/>
					<Condition relation="Larger">
						<Lvalue>
							<Action what="hitsavailable" parameter="EoC"/>
						</Lvalue>
						<Rvalue value="0"/>
					</Condition>
				</StateTransition>
			</State>
			<State name="ReadColumn">
				<Action what="loadcell" parameter="CU"/>
				<Action what="readcell"/>
				<!--<Action what="printhitsavailable" parameter="CU" value="1"/>-->
				<StateTransition nextstate="ReadColumn" delay="1">
					<Condition relation="And">
						<Lvalue>
							<Condition relation="Larger">
								<Lvalue>
									<Action what="hitsavailable" parameter="EoC"/>
								</Lvalue>
								<Rvalue value="0"/>
							</Condition>
						</Lvalue>
						<Rvalue>
							<Condition relation="Smaller">
								<Lvalue>
									<Action what="getcountervalue" parameter="RdColrounds"/>
								</Lvalue>
								<Rvalue value="1"/> <!-- maximum: 63 -->
							</Condition>
						</Rvalue>
					</Condition>
					<Action what="incrementcounter" parameter="RdColrounds" value="1"/>
				</StateTransition>
				<StateTransition nextstate="PullDown" delay="1">
					<Condition relation="Or">
						<Lvalue>
							<Condition relation="Equal">
								<Lvalue>
									<Action what="hitsavailable" parameter="EoC"/>
								</Lvalue>
								<Rvalue value="0"/>
							</Condition>
						</Lvalue>
						<Rvalue>
							<Condition relation="LargerEqual">
								<Lvalue>
									<Action what="getcountervalue" parameter="RdColrounds"/>
								</Lvalue>
								<Rvalue value="1"/>
							</Condition>
						</Rvalue>
					</Condition>
					<Action what="setcounter" parameter="RdColrounds" value="0"/>
				</StateTransition>
			</State>
		</StateMachine>
	</Detector>
	<EventGenerator>
		<Seed x0="0"/>
		<Output filename="eventgen_M2.dat"/>
		<EventRate f="0.01"/><!-- absolute rate; or with absolute="0" rate per area in 1/(s*µm²)-->
		<ClusterSize sigma="20."/>
		<CutOffFactor numsigmas="5"/>
		<InclinationSigma sigma="0.15"/>
		<ChargeScale scale="1."/>
		<MinSize diagonal="2."/>
		<NumEvents n="100" start="0."/>
		<TriggerProbability p="1."/>
		<TriggerDelay delay="15"/>
		<TriggerLength length="10"/>
	</EventGenerator>
</Simulation>

